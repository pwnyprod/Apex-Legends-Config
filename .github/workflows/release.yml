name: Build and Release

on:
  push:
    branches: [ main ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn install

      - name: Build with Rollup
        run: yarn build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist

      - name: Extract new version from CHANGELOG
        id: version
        run: |
          VERSION=$(grep -Eo "## \[[0-9]+\.[0-9]+\.[0-9]+\]" CHANGELOG.md | head -n 1 | grep -Eo "[0-9]+\.[0-9]+\.[0-9]+")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Extract release notes from CHANGELOG
        id: notes
        run: |
          VERSION=${{ steps.version.outputs.version }}
          NOTES=$(awk "/## \\[$VERSION\\]/,/## \\[/{print}" CHANGELOG.md | head -n -1 | tail -n +2)
          echo "notes=$NOTES" >> $GITHUB_OUTPUT

      - name: Create Git Tag
        run: |
          VERSION=${{ steps.version.outputs.version }}
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push origin "v$VERSION"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "v${{ steps.version.outputs.version }}"
          release_name: "v${{ steps.version.outputs.version }}"
          body: ${{ steps.notes.outputs.notes }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload each ZIP as release asset
        run: |
          for file in dist/releases/*.zip; do
            filename=$(basename "$file")
            curl \
              -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/zip" \
              --data-binary @"$file" \
              "${{ steps.create_release.outputs.upload_url }}?name=$filename"
          done